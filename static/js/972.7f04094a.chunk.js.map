{"version":3,"file":"static/js/972.7f04094a.chunk.js","mappings":"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","sources":["components/Header/index.tsx","queries/axios.ts","queries/service.ts","queries/ai/ai.service.ts","queries/ai/ai.queries.ts","queries/ai/useAIQueries.ts","components/Button/BasicButton.tsx","components/Form/AI/AIAddForm.tsx","components/NavigationBar/index.tsx","queries/tutor/tutor.service.ts","queries/tutor/tutor.queries.ts","containers/home/PublicSection/Card.tsx","components/Form/Tutor/TutorAddForm.tsx","queries/tutor/useTutorQueries.ts","containers/home/PublicSection/index.tsx","containers/home/MainSection/index.tsx","page/Home/index.tsx"],"sourcesContent":["const Header = () => {\n  return (\n    <header className=\"sticky top-0 left-0 z-50 flex items-center w-full h-16 px-4 text-white bg-orange-400/80 backdrop-blur-sm\">\n      <h1 className=\"text-2xl font-bold\">Exemplar</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import axios from \"axios\";\n\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:8000\";\n\nconst axiosInstance = axios.create({\n  baseURL: SERVER_URL,\n});\n\nexport default axiosInstance;\n","import axiosInstance from \"./axios\";\n\nclass Service {\n  constructor(\n    private readonly api = axiosInstance,\n    readonly controller = {\n      ai: {\n        getAll: \"api/ai\",\n        getOneById: (id: number) => `api/ai/${id}`,\n        createOne: \"api/ai/\",\n      },\n      tutor: {\n        getAll: \"api/tutor\",\n        getOneById: (id: number) => `api/tutor/${id}`,\n        createOne: \"api/tutor/\",\n      },\n    }\n  ) {}\n\n  async request<T>(\n    url: string,\n    method: \"post\" | \"get\" | \"put\" | \"delete\" = \"get\",\n    body?: any,\n    params: Record<string, string> = {}\n  ) {\n    try {\n      const { data } = await this.api<T>({\n        url,\n        method,\n        data: body,\n        params,\n      });\n      return data;\n    } catch (error: any) {\n      console.error(error);\n      throw new Error(error);\n    }\n  }\n}\n\nexport default Service;\n","import Service from \"../service\";\nimport { AI, CreateAI } from \"./ai.dto\";\n\nclass AIService extends Service {\n  constructor() {\n    super();\n  }\n\n  async getAll(): Promise<AI[]> {\n    return await this.request<AI[]>(this.controller.ai.getAll);\n  }\n\n  async createOne(data: CreateAI): Promise<AI> {\n    return await this.request<AI>(this.controller.ai.createOne, \"post\", data);\n  }\n}\n\nexport default new AIService();\n","import { AI, CreateAI } from \"./ai.dto\";\nimport aiService from \"./ai.service\";\n\nexport const queryKeys = {\n  getAll: [\"ai\"],\n};\n\nconst queryOptions = {\n  getAll: () => ({\n    queryKey: queryKeys.getAll,\n    queryFn: () => aiService.getAll(),\n  }),\n  createOne: () => ({\n    mutationFn: (data: CreateAI) => aiService.createOne(data),\n  }),\n};\n\nexport default queryOptions;\n","import {\n  useMutation,\n  useQueryClient,\n  useSuspenseQuery,\n} from \"@tanstack/react-query\";\nimport queryOptions, { queryKeys } from \"./ai.queries\";\n\nexport function useGetAllAI() {\n  return useSuspenseQuery(queryOptions.getAll());\n}\n\nexport function useCreateOneAI() {\n  const queryClient = useQueryClient();\n  return useMutation({\n    ...queryOptions.createOne(),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: queryKeys.getAll,\n      });\n    },\n  });\n}\n","import { FormEvent, ReactNode, useMemo } from \"react\";\n\nexport interface BasicButtonProps {\n  children: ReactNode;\n  onClick?: () => void;\n  onSubmit?: (e: FormEvent<HTMLFormElement | HTMLButtonElement>) => void;\n  color?: \"white\" | \"blue\" | \"red\";\n  type?: \"submit\" | \"reset\" | \"button\" | undefined;\n}\n\nconst BasicButton = ({\n  children,\n  type = \"button\",\n  color = \"white\",\n  onClick = () => {},\n  onSubmit = () => {},\n}: BasicButtonProps) => {\n  const getClassName = useMemo(() => {\n    if (color === \"blue\") {\n      return \"text-white bg-blue-700 hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2\";\n    } else if (color === \"red\") {\n      return \"text-white bg-red-700 hover:bg-red-800 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2\";\n    } else {\n      return \"py-2.5 px-5 me-2 mb-2 text-sm font-medium text-gray-900 bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700\";\n    }\n  }, [color]);\n  return (\n    <button\n      className={getClassName}\n      type={type}\n      onClick={onClick}\n      onSubmit={(e) => onSubmit(e)}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default BasicButton;\n","import { useEffect } from \"react\";\nimport { CreateAI } from \"../../../queries/ai/ai.dto\";\nimport { useCreateOneAI } from \"../../../queries/ai/useAIQueries\";\nimport useModalStore from \"../../../stores/modalStore\";\nimport BasicButton from \"../../Button/BasicButton\";\n\ninterface AIAddFormProps {}\n\nconst AIAddForm = ({}: AIAddFormProps) => {\n  // store\n  const { setModal, modal } = useModalStore();\n  // react-query\n  const { mutate, isSuccess } = useCreateOneAI();\n  // funcs\n  const handleOnSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    const data = Object.fromEntries(formData.entries());\n    const body: CreateAI = {\n      name: data.name as string,\n      description: data.desc as string,\n    };\n\n    mutate(body);\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      setModal({\n        ...modal,\n        isOpen: false,\n      });\n    }\n  }, [isSuccess]);\n\n  return (\n    <form className=\"flex flex-col w-full gap-2\" onSubmit={handleOnSubmit}>\n      <label htmlFor=\"name\">\n        <p className=\"block mb-2 text-sm font-medium text-gray-900\">Name</p>\n        <input\n          className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n          name=\"name\"\n          id=\"name\"\n          type=\"text\"\n          required\n        />\n      </label>\n      <label htmlFor=\"desc\">\n        <p className=\"block mb-2 text-sm font-medium text-gray-900\">\n          Description\n        </p>\n        <textarea\n          rows={5}\n          id=\"desc\"\n          name=\"desc\"\n          required\n          className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n        />\n      </label>\n      <div className=\"flex items-center justify-center w-full mt-4\">\n        <BasicButton type=\"submit\">SAVE</BasicButton>\n        <BasicButton\n          color=\"red\"\n          onClick={() =>\n            setModal({\n              ...modal,\n              isOpen: false,\n            })\n          }\n        >\n          CANCEL\n        </BasicButton>\n      </div>\n    </form>\n  );\n};\n\nexport default AIAddForm;\n","import { Suspense } from \"react\";\nimport { useGetAllAI } from \"../../queries/ai/useAIQueries\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport useModalStore from \"../../stores/modalStore\";\nimport AIAddForm from \"../Form/AI/AIAddForm\";\n\nconst DataContainer = () => {\n  // store\n  const { setModal } = useModalStore();\n  // react-query\n  const { data } = useGetAllAI();\n  // funcs\n  const handleOnClick = () => {\n    setModal({\n      isOpen: true,\n      title: \"Add AI\",\n      component: <AIAddForm />,\n    });\n  };\n\n  return (\n    <ul>\n      {data.map((it) => (\n        <li\n          className=\"text-lg font-bold cursor-pointer\"\n          key={`ai-${it.id}-${it.name}`}\n        >\n          {it.name}\n        </li>\n      ))}\n      <li className=\"text-lg font-bold cursor-pointer\" onClick={handleOnClick}>\n        +\n      </li>\n    </ul>\n  );\n};\n\nconst NavigationBar = () => {\n  return (\n    <nav className=\"sticky top-16 left-0 w-[30%] h-[calc(100dvh-4rem)] bg-gray-200 pl-3 py-2 overflow-y-scroll\">\n      <ErrorBoundary fallback={<div>error</div>}>\n        <Suspense fallback={<div>...Loading</div>}>\n          <DataContainer />\n        </Suspense>\n      </ErrorBoundary>\n    </nav>\n  );\n};\n\nexport default NavigationBar;\n","import Service from \"../service\";\nimport { CreateTutor, Tutor } from \"./tutor.dto\";\n\nclass TutorService extends Service {\n  constructor() {\n    super();\n  }\n\n  async getAll(): Promise<Tutor[]> {\n    return await this.request<Tutor[]>(this.controller.tutor.getAll);\n  }\n\n  async createOne(data: CreateTutor): Promise<Tutor> {\n    return await this.request<Tutor>(\n      this.controller.tutor.createOne,\n      \"post\",\n      data\n    );\n  }\n}\n\nexport default new TutorService();\n","import { CreateTutor } from \"./tutor.dto\";\nimport tutorService from \"./tutor.service\";\n\nexport const queryKeys = {\n  getAll: [\"tutor\"],\n};\n\nconst queryOptions = {\n  getAll: () => ({\n    queryKey: queryKeys.getAll,\n    queryFn: () => tutorService.getAll(),\n  }),\n  createOne: () => ({\n    mutationFn: (data: CreateTutor) => tutorService.createOne(data),\n  }),\n};\n\nexport default queryOptions;\n","interface CardProps {\n  id: number;\n  ai_id: number;\n  name: string;\n  description: string;\n}\n\nconst Card = ({ id, ai_id, name, description }: CardProps) => {\n  return (\n    <div className=\"flex w-full gap-2\">\n      <div className=\"h-40 rounded-sm w-36 bg-zinc-500\"></div>\n      <div className=\"flex flex-col w-full h-full\">\n        <p>{name}</p>\n        <p>{description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { Suspense, useEffect } from \"react\";\nimport { useGetAllAI } from \"../../../queries/ai/useAIQueries\";\nimport BasicButton from \"../../Button/BasicButton\";\nimport useModalStore from \"../../../stores/modalStore\";\nimport { useCreateOneTutor } from \"../../../queries/tutor/useTutorQueries\";\nimport { CreateTutor } from \"../../../queries/tutor/tutor.dto\";\n\nexport interface TutorAddFormProps {}\n\nconst SelectContainer = () => {\n  const { data } = useGetAllAI();\n\n  return (\n    <label\n      className=\"block mb-2 text-sm font-medium text-gray-900\"\n      htmlFor=\"ai\"\n    >\n      AI\n      <select\n        id=\"ai\"\n        name=\"ai\"\n        className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n        defaultValue=\"default\"\n        required\n      >\n        <option value=\"default\" disabled>\n          Choose an AI\n        </option>\n        {data.map((ai) => (\n          <option key={`option-${ai.id}`} value={ai.id}>\n            {ai.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n};\n\nconst TutorAddForm = ({}: TutorAddFormProps) => {\n  // react-query\n  const { mutate, isSuccess } = useCreateOneTutor();\n  // store\n  const { setModal, modal } = useModalStore();\n  // funcs\n  const handleOnSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    const data = Object.fromEntries(formData.entries());\n    console.log(data);\n    const body: CreateTutor = {\n      name: data.name as string,\n      ai: parseInt(data.ai as string),\n      description: data.desc as string,\n    };\n    mutate(body);\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      setModal({\n        ...modal,\n        isOpen: false,\n      });\n    }\n  }, [isSuccess]);\n\n  return (\n    <form className=\"flex flex-col w-full gap-2\" onSubmit={handleOnSubmit}>\n      <label htmlFor=\"name\">\n        <p className=\"block mb-2 text-sm font-medium text-gray-900\">Name</p>\n        <input\n          className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n          name=\"name\"\n          id=\"name\"\n          type=\"text\"\n          required\n        />\n      </label>\n      <Suspense>\n        <SelectContainer />\n      </Suspense>\n      <label htmlFor=\"desc\">\n        <p className=\"block mb-2 text-sm font-medium text-gray-900\">\n          Description\n        </p>\n        <textarea\n          rows={5}\n          name=\"desc\"\n          required\n          className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n        />\n      </label>\n      <div className=\"flex items-center justify-center w-full mt-4\">\n        <BasicButton type=\"submit\">SAVE</BasicButton>\n        <BasicButton\n          onClick={() =>\n            setModal({\n              ...modal,\n              isOpen: false,\n            })\n          }\n          color=\"red\"\n        >\n          CANCEL\n        </BasicButton>\n      </div>\n    </form>\n  );\n};\n\nexport default TutorAddForm;\n","import {\n  useMutation,\n  useQueryClient,\n  useSuspenseQuery,\n} from \"@tanstack/react-query\";\nimport queryOptions from \"./tutor.queries\";\n\nexport function useGetAllTutor() {\n  return useSuspenseQuery(queryOptions.getAll());\n}\n\nexport function useCreateOneTutor() {\n  const queryClient = useQueryClient();\n  return useMutation({\n    ...queryOptions.createOne(),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: queryOptions.getAll().queryKey,\n      });\n    },\n  });\n}\n","import { Suspense } from \"react\";\nimport { useGetAllTutor } from \"../../../queries/tutor/useTutorQueries\";\nimport Card from \"./Card\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport useModalStore from \"../../../stores/modalStore\";\nimport TutorAddForm from \"../../../components/Form/Tutor/TutorAddForm\";\n\nconst DataContainer = () => {\n  // react-query\n  const { data } = useGetAllTutor();\n  // store\n  const { setModal } = useModalStore();\n  // funcs\n  const handleOnAdd = () => {\n    setModal({\n      isOpen: true,\n      title: \"Add Tutor\",\n      component: <TutorAddForm />,\n    });\n  };\n  return (\n    <div className=\"flex flex-col items-center w-full h-full gap-3\">\n      {data.map((it) => (\n        <Card\n          key={`tutor-${it.id}-${it.name}`}\n          ai_id={it.ai_id}\n          id={it.id}\n          name={it.name}\n          description={it.description}\n        />\n      ))}\n      <button\n        className=\"flex px-3 py-3 font-bold border rounded-full shadow-md\"\n        type=\"button\"\n        onClick={handleOnAdd}\n      >\n        ADD\n      </button>\n    </div>\n  );\n};\n\nconst PublicSection = () => {\n  return (\n    <section className=\"w-full h-full py-4\">\n      <ErrorBoundary fallback={<div>error</div>}>\n        <Suspense fallback={<div>...Loading</div>}>\n          <DataContainer />\n        </Suspense>\n      </ErrorBoundary>\n    </section>\n  );\n};\n\nexport default PublicSection;\n","import { useState } from \"react\";\nimport PublicSection from \"../PublicSection\";\n\nconst MainSection = () => {\n  const [selectedItem, setSelectedItem] = useState(\"Me\");\n  return (\n    <section className=\"w-[70%] h-[calc(100dvh-4rem)] px-4 text-black relative overflow-y-scroll\">\n      <div className=\"sticky top-0 flex items-center justify-center w-full gap-2 py-4 bg-white\">\n        <button\n          type=\"button\"\n          onClick={() => setSelectedItem(\"Me\")}\n          className={`${\n            selectedItem === \"Me\" ? \"text-blue-500\" : \"text-neutral-500\"\n          }`}\n        >\n          Me\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setSelectedItem(\"Public\")}\n          className={`${\n            selectedItem === \"Public\" ? \"text-blue-500\" : \"text-neutral-500\"\n          }`}\n        >\n          Public\n        </button>\n      </div>\n      <div className=\"w-full\">\n        {selectedItem === \"Public\" ? <PublicSection /> : null}\n      </div>\n    </section>\n  );\n};\n\nexport default MainSection;\n","import Header from \"../../components/Header\";\nimport NavigationBar from \"../../components/NavigationBar\";\nimport MainSection from \"../../containers/home/MainSection\";\n\nconst HomePage = () => {\n  return (\n    <main className=\"relative min-w-full text-black h-dvh\">\n      <Header />\n      <div className=\"flex w-full\">\n        <NavigationBar />\n        <MainSection />\n      </div>\n    </main>\n  );\n};\n\nexport default HomePage;\n"],"names":["Header","_jsx","className","children","axios","create","baseURL","process","constructor","api","arguments","length","undefined","axiosInstance","controller","ai","getAll","getOneById","id","createOne","tutor","request","url","method","body","params","data","this","error","console","Error","Service","super","queryKeys","queryKey","queryFn","aiService","mutationFn","useGetAllAI","useSuspenseQuery","queryOptions","_ref","type","color","onClick","onSubmit","getClassName","useMemo","e","setModal","modal","useModalStore","mutate","isSuccess","queryClient","useQueryClient","useMutation","onSuccess","invalidateQueries","useCreateOneAI","useEffect","isOpen","_jsxs","preventDefault","formData","FormData","currentTarget","Object","fromEntries","entries","name","description","desc","htmlFor","required","rows","BasicButton","DataContainer","map","it","handleOnClick","title","component","AIAddForm","NavigationBar","ErrorBoundary","fallback","Suspense","tutorService","ai_id","SelectContainer","defaultValue","value","disabled","useCreateOneTutor","log","parseInt","Card","handleOnAdd","TutorAddForm","PublicSection","MainSection","selectedItem","setSelectedItem","useState","HomePage"],"sourceRoot":""}